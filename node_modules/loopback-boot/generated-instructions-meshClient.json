{
  "env": "production",
  "config": {},
  "dataSources": {
    "memory": {
      "name": "memory",
      "connector": "memory"
    }
  },
  "models": [
    {
      "name": "Api",
      "config": {
        "dataSource": "remote"
      },
      "definition": {
        "name": "Api",
        "plural": "Api",
        "base": "Model",
        "description": "API",
        "properties": {
          "version": {
            "type": "string",
            "required": true,
            "description": "Version of this server"
          },
          "serverPid": {
            "type": "number",
            "required": true,
            "description": "Operating system PID of the server process"
          },
          "apiPort": {
            "type": "number",
            "required": true,
            "description": "Port that this server is listening on"
          },
          "apiVersion": {
            "type": "string",
            "required": true,
            "description": "Version of the REST API"
          },
          "driverType": {
            "type": "string",
            "required": true,
            "description": "The driver type run by this server"
          },
          "driverStatus": {
            "type": "string",
            "required": true,
            "description": "The hostname of this executor"
          }
        },
        "validations": [],
        "relations": {},
        "acls": [],
        "methods": []
      },
      "sourceFile": "loopback-boot#models#common\\models\\api.js"
    },
    {
      "name": "User",
      "config": {
        "dataSource": "remote"
      }
    },
    {
      "name": "AccessToken",
      "config": {
        "dataSource": "memory",
        "public": false
      }
    },
    {
      "name": "ACL",
      "config": {
        "dataSource": "memory",
        "public": false
      }
    },
    {
      "name": "RoleMapping",
      "config": {
        "dataSource": "memory",
        "public": false
      }
    },
    {
      "name": "Role",
      "config": {
        "dataSource": "memory",
        "public": false
      }
    },
    {
      "name": "Service",
      "definition": {
        "name": "Service",
        "plural": "Services",
        "base": "PersistedModel",
        "indexes": {
          "name": {
            "keys": {
              "name": 1
            },
            "options": {
              "unique": true
            }
          }
        },
        "options": {
          "hidden": [
            "startTime",
            "_group"
          ]
        },
        "description": "Represents a Service",
        "properties": {
          "name": {
            "type": "string",
            "required": true,
            "index": 1,
            "description": "The name of the service. This may be different from the name in the package.json"
          },
          "startTime": {
            "type": "date",
            "description": "The timestamp for the last time this service was started"
          },
          "started": {
            "type": "boolean",
            "description": "Indicates if the service should be running or stopped"
          },
          "deploymentInfo": {
            "type": "object",
            "description": "Information about the node application deployed for this service"
          },
          "env": {
            "type": "object",
            "default": {},
            "description": "List of environment variables set for the node application"
          }
        },
        "validations": [],
        "relations": {
          "executors": {
            "type": "hasMany",
            "model": "Executor",
            "through": "ServiceInstance",
            "description": "List of executors the service is running on"
          },
          "instances": {
            "type": "hasMany",
            "model": "ServiceInstance",
            "description": "List of instances that run this service"
          },
          "profileDatas": {
            "type": "hasMany",
            "model": "ProfileData",
            "description": "List of cpuprofile or heapdumps gathered for this service"
          },
          "groups": {
            "type": "embedsMany",
            "model": "Group",
            "description": "List of groups used for routing or partitioning"
          }
        },
        "acls": [],
        "methods": []
      },
      "sourceFile": "loopback-boot#models#common\\models\\service.js"
    },
    {
      "name": "ServerService",
      "config": {
        "dataSource": "remote",
        "public": true
      },
      "definition": {
        "name": "ServerService",
        "plural": "Services",
        "base": "Service",
        "properties": {},
        "options": {},
        "relations": {},
        "indexes": {},
        "acls": [],
        "models": [
          "Group",
          "Service"
        ]
      },
      "sourceFile": "loopback-boot#models#client\\models\\server-service.js"
    },
    {
      "name": "Group",
      "config": {
        "dataSource": "remote",
        "public": false
      },
      "definition": {
        "name": "Group",
        "base": "PersistedModel",
        "description": "Represents an abstract set of service instances that may be used for routing and partitioning",
        "properties": {
          "name": {
            "type": "string",
            "required": true,
            "description": "Name of the group"
          },
          "scale": {
            "type": "number",
            "required": true,
            "description": "Number of service instance that should be in the group"
          }
        },
        "validations": [],
        "relations": {},
        "acls": [],
        "methods": []
      }
    },
    {
      "name": "Executor",
      "config": {
        "dataSource": "remote",
        "public": true
      },
      "definition": {
        "name": "Executor",
        "base": "PersistedModel",
        "description": "Represents an Executor VM or bare-metal machine, which can host multiple service instances",
        "properties": {
          "address": {
            "type": "string",
            "description": "The IP address on which the API server and gateway can access this executor"
          },
          "hostname": {
            "type": "string",
            "description": "The hostname of this executor"
          },
          "APIPort": {
            "type": "string",
            "description": "The port this executor is listening on for API commands. (deprecated)"
          },
          "metadata": {
            "type": "object",
            "description": "Driver and connection metadata for remote host",
            "default": {}
          },
          "token": {
            "type": "string",
            "description": "Authentication token for executor to connect to central"
          },
          "driver": {
            "type": "string",
            "description": "The driver used to connect to this executor"
          },
          "totalCapacity": {
            "type": "number",
            "description": "The number of containers/service instances that this executor can support"
          },
          "remainingCapacity": {
            "type": "number",
            "default": -1,
            "description": "Currently allocated number of instances"
          }
        },
        "validations": [],
        "relations": {
          "instances": {
            "type": "hasMany",
            "model": "ServiceInstance"
          },
          "services": {
            "type": "hasMany",
            "model": "ServerService",
            "through": "ServiceInstance"
          }
        },
        "acls": [],
        "methods": []
      },
      "sourceFile": "loopback-boot#models#common\\models\\executor.js"
    },
    {
      "name": "ServiceInstance",
      "config": {
        "dataSource": "remote",
        "public": true
      },
      "definition": {
        "name": "ServiceInstance",
        "base": "PersistedModel",
        "description": "Represents an instance of a service running on an executor",
        "properties": {
          "executorId": {
            "type": "number",
            "index": 1,
            "description": "The ID of the executor on which this instance is running"
          },
          "serverServiceId": {
            "type": "number",
            "index": 1,
            "description": "The ID of the service this executor belongs to"
          },
          "groupId": {
            "type": "number",
            "index": 1,
            "description": "The ID of the service group this executor belongs to"
          },
          "currentDeploymentId": {
            "type": "string",
            "description": "The SHA1 hash of the package deployed to this instance. This ties back to the value of Service.deploymentInfo.hash"
          },
          "startTime": {
            "type": "date",
            "description": "The ID of the service group this executor belongs to"
          },
          "restartCount": {
            "type": "number",
            "description": "The number of time the supervisor process for this instance was killed or has crashed and had to be restarted"
          },
          "stats": {
            "type": "object"
          },
          "PMPort": {
            "type": "number",
            "description": "The API port the process manager is available on"
          },
          "containerVersionInfo": {
            "type": "object",
            "description": "Information about the host, operating system, node version and container technology hosting this instance"
          },
          "token": {
            "type": "string",
            "description": "Authentication token for executor to connect to central"
          },
          "started": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if this instance should be running or stopped"
          },
          "setSize": {
            "type": "number",
            "default": 0,
            "description": "The currently configured number of node processes that the instance should be running"
          },
          "cpus": {
            "type": "string",
            "description": "The number of cpus to use when starting the service on this instance"
          },
          "tracingEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if tracing is enabled on this instance"
          },
          "applicationName": {
            "type": "string",
            "description": "The application name that strong-agent uses to report its metrics"
          },
          "npmModules": {
            "type": "object",
            "description": "NPM package and sub-module information"
          },
          "agentVersion": {
            "type": "string",
            "description": "The version of strong-agent running on this instance"
          }
        },
        "validations": [],
        "relations": {
          "actions": {
            "type": "hasMany",
            "model": "InstanceAction"
          },
          "processes": {
            "type": "hasMany",
            "model": "ServiceProcess"
          },
          "executor": {
            "type": "belongsTo",
            "model": "Executor"
          },
          "serverService": {
            "type": "belongsTo",
            "model": "ServerService"
          }
        },
        "acls": [],
        "methods": []
      },
      "sourceFile": "loopback-boot#models#common\\models\\service-instance.js"
    },
    {
      "name": "ServiceProcess",
      "config": {
        "dataSource": "remote",
        "public": true
      },
      "definition": {
        "name": "ServiceProcess",
        "base": "PersistedModel",
        "description": "Represents a since OS process running on the Instance",
        "properties": {
          "parentPid": {
            "type": "number",
            "required": true,
            "index": true,
            "description": "The OS process ID of the parent of this process (eg: *NIX PPID)"
          },
          "pid": {
            "type": "number",
            "required": true,
            "index": true,
            "description": "The OS process ID of this process (eg: *NIX PID)"
          },
          "workerId": {
            "type": "number",
            "required": true,
            "description": "The cluster worker ID"
          },
          "listeningSockets": {
            "type": [
              "object"
            ],
            "default": [],
            "description": "List of addresses/ports this process is listening on"
          },
          "isTrackingObjects": {
            "type": "boolean",
            "required": true,
            "default": false,
            "description": "Indicates if object-tracking is turned on for this process"
          },
          "isProfiling": {
            "type": "boolean",
            "required": true,
            "default": false,
            "description": "Indicates if cpu-profiling is turned on for this process"
          },
          "isTracing": {
            "type": "boolean",
            "required": true,
            "default": false,
            "description": "Indicates if tracing is turned on for this process"
          },
          "watchdogTimeout": {
            "type": "number",
            "default": 0,
            "description": "Watchdog timeout, in milliseconds. (0 = watchdog disabled)"
          },
          "watchdogStallout": {
            "type": "number",
            "default": 0,
            "description": "Watchdog stallout, in stall counts. (0 = stall disabled)"
          },
          "isSnapshotting": {
            "type": "boolean",
            "required": true,
            "default": false,
            "description": "Indicates if a heap-dump is being performed on this process"
          },
          "startTime": {
            "type": "date",
            "description": "Timestamp when this process was started"
          },
          "stopTime": {
            "type": "date",
            "description": "Timestamp when this process was stopped or killed"
          },
          "stopReason": {
            "type": "string",
            "description": "The signal or reason this process exited",
            "default": ""
          }
        },
        "validations": [],
        "relations": {
          "serviceInstance": {
            "type": "belongsTo",
            "model": "ServiceInstance"
          }
        },
        "acls": [],
        "methods": []
      },
      "sourceFile": "loopback-boot#models#common\\models\\service-process.js"
    },
    {
      "name": "ServiceMetric",
      "config": {
        "dataSource": "remote",
        "public": true
      },
      "definition": {
        "name": "ServiceMetric",
        "base": "PersistedModel",
        "properties": {
          "processId": {
            "type": "number",
            "required": true,
            "description": "id of ServiceProcess, not the pid"
          },
          "workerId": {
            "type": "number",
            "required": true
          },
          "timeStamp": {
            "type": "date",
            "required": true
          },
          "counters": {
            "type": "object"
          },
          "timers": {
            "type": "object"
          },
          "gauges": {
            "type": "object"
          }
        },
        "validations": [],
        "relations": {},
        "acls": [],
        "methods": []
      }
    },
    {
      "name": "AgentTrace",
      "config": {
        "dataSource": "remote",
        "public": true
      },
      "definition": {
        "name": "AgentTrace",
        "base": "PersistedModel",
        "properties": {
          "processId": {
            "type": "number",
            "description": "id of ServiceProcess, not the pid",
            "required": true
          },
          "workerId": {
            "type": "number",
            "required": true
          },
          "timeStamp": {
            "type": "date",
            "required": true
          },
          "trace": {
            "type": "object"
          }
        },
        "validations": [],
        "relations": {},
        "acls": [],
        "methods": []
      }
    },
    {
      "name": "ExpressUsageRecord",
      "config": {
        "dataSource": "remote",
        "public": true
      },
      "definition": {
        "name": "ExpressUsageRecord",
        "base": "PersistedModel",
        "properties": {
          "processId": {
            "type": "number",
            "description": "id of ServiceProcess, not the pid",
            "required": true
          },
          "workerId": {
            "type": "number",
            "required": true
          },
          "timeStamp": {
            "type": "date",
            "required": true
          },
          "requestMethod": {
            "type": "string"
          },
          "requestUrl": {
            "type": "string"
          },
          "clientAddress": {
            "type": "string"
          },
          "clientUsername": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientDetail": {
            "type": "object"
          },
          "lbModelName": {
            "type": "string"
          },
          "lbInstanceId": {
            "type": "string"
          },
          "lbRemoteMethod": {
            "type": "string"
          },
          "detail": {
            "type": "object"
          },
          "responseDuration": {
            "type": "number"
          },
          "responseSize": {
            "type": "number"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "validations": [],
        "relations": {},
        "acls": [],
        "methods": []
      },
      "sourceFile": "loopback-boot#models#common\\models\\express-usage-record.js"
    },
    {
      "name": "ProfileData",
      "config": {
        "dataSource": "remote",
        "public": false
      },
      "definition": {
        "name": "ProfileData",
        "plural": "ProfileDatas",
        "base": "PersistedModel",
        "options": {
          "hidden": [
            "executorId"
          ]
        },
        "description": "Represents a cpu profile or heap dump gathered from a node process",
        "properties": {
          "executorId": {
            "type": "number",
            "index": 1,
            "description": "The ID of the Executor instance the process was running on"
          },
          "serverServiceId": {
            "type": "number",
            "index": 1,
            "description": "The ID of the Service the process was running"
          },
          "instanceId": {
            "type": "number",
            "index": 1,
            "description": "The ID of the Service instance the process was part of"
          },
          "serviceProcessId": {
            "type": "number",
            "do we need? required": true,
            "index": 1,
            "description": "The ID of the ServiceProcess"
          },
          "type": {
            "type": "string",
            "required": true,
            "description": "The type of captured data: 'cpuprofile' or 'heapsnapshot'"
          },
          "targetId": {
            "type": "number",
            "required": true,
            "description": "The OS Process ID or cluster worker ID of the process.",
            "_comment1": "UNUSED? you can start on a pid, and stop on a wid",
            "_comment2": "so field is unreliable, and appears without possible use"
          },
          "startTime": {
            "type": "date",
            "required": true,
            "description": "Timestamp the cpu profile or heap dump was started"
          },
          "completed": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if the profile generation is still in progress"
          },
          "fileName": {
            "type": "string",
            "description": "The name of the file on the Executor"
          },
          "errored": {
            "type": "string",
            "description": "If an error occurred, this contains the error message"
          }
        },
        "validations": [],
        "relations": {
          "executor": {
            "type": "belongsTo",
            "model": "Executor"
          },
          "serverService": {
            "type": "belongsTo",
            "model": "ServerService"
          }
        },
        "acls": [],
        "methods": []
      }
    },
    {
      "name": "Action",
      "definition": {
        "name": "Action",
        "base": "PersistedModel",
        "description": "Represents an action to perform on an instance",
        "properties": {
          "request": {
            "type": "object",
            "required": true,
            "description": "Command, optional subcommand and target to perform an action on"
          },
          "timestamp": {
            "type": "date",
            "description": "Timestamp when the action was submitted to the API"
          },
          "result": {
            "type": "object",
            "description": "The result or output of the action"
          }
        },
        "validations": [],
        "relations": {
          "serviceInstance": {
            "type": "belongsTo",
            "model": "ServiceInstance"
          }
        },
        "acls": [],
        "methods": []
      }
    },
    {
      "name": "InstanceAction",
      "config": {
        "dataSource": "remote",
        "public": false
      },
      "definition": {
        "name": "InstanceAction",
        "base": "Action",
        "properties": {},
        "validations": [],
        "relations": {},
        "acls": [],
        "methods": []
      }
    }
  ],
  "components": [],
  "mixins": [],
  "files": {
    "boot": []
  },
  "appId": "meshClient"
}