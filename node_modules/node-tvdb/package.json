{
  "name": "node-tvdb",
  "description": "Node.js library for accessing TheTVDB's API",
  "version": "1.6.1",
  "author": {
    "name": "Edward Wellbrook",
    "email": "edwellbrook@gmail.com"
  },
  "keywords": [
    "tv",
    "tvdb",
    "thetvdb",
    "api",
    "wrapper"
  ],
  "homepage": "https://github.com/edwellbrook/node-tvdb",
  "main": "index.js",
  "engines": {
    "node": ">=2.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/edwellbrook/node-tvdb.git"
  },
  "dependencies": {
    "jszip": "2.5.0",
    "request": "2.67.0",
    "xml2js": "0.4.15"
  },
  "devDependencies": {
    "gulp": "3.9.0",
    "gulp-es6-transpiler": "1.0.1",
    "mocha": "2.3.3"
  },
  "scripts": {
    "test": "gulp && mocha test/runner",
    "transpile": "gulp"
  },
  "license": "MIT",
  "readme": "# node-tvdb\n\n[![wercker status](https://app.wercker.com/status/19dcad373ede868e37754a0367d68382/s/master \"wercker status\")](https://app.wercker.com/project/bykey/19dcad373ede868e37754a0367d68382)\n\nNode.js library for accessing [TheTVDB API](http://www.thetvdb.com/wiki/index.php/Programmers_API). Refactored from [joaocampinhos/thetvdb-api](https://github.com/joaocampinhos/thetvdb-api) to give nicer output and lots of additional features.\n\nPull requests are always very welcome.\n\n## Features\n\n- Handle errors from API as JavaScript errors\n- Only returns relevant data (no need to call response.Data.Series etc.)\n- Set language at initialisation or afterwards when needed\n- Normalised keys and values\n- Empty values parsed as null\n- Updates endpoint grouped by type\n- Supports both node callback functions and promises\n- Utility function to parse TheTVDB API's pipe list (e.g. \"|Name|Name|Name|Name|\")\n- Use zip data instead of straight xml where possible\n- [Tests with Mocha and Wercker CI](https://app.wercker.com/#applications/53f155d02094f9781d058f98)\n\n## Installation\n\nInstall with [npm](http://npmjs.org/):\n\n``` shell\nnpm install --save node-tvdb\n```\n\nAnd run tests with [Mocha](http://visionmedia.github.io/mocha/):\n\n``` shell\nTVDB_KEY=[YOUR API KEY HERE] npm test\n```\n\n> _Mocha is installed as a development dependency; you do not need to install it globally to run the tests._\n\n## Example Usage\n\nTo start using this library you first need an API key. You can request one [here](http://thetvdb.com/?tab=apiregister). Then just follow this simple example that fetches all the shows containing \"The Simpsons\" in the name.\n\n``` javascript\nvar TVDB = require(\"node-tvdb\");\nvar tvdb = new TVDB(\"ABC123\");\n\ntvdb.getSeriesByName(\"The Simpsons\", function(err, response) {\n    // handle error and response\n});\n```\n\nFor use with node engines without `class`/`const`/`let`:\n\n``` javascript\nvar TVDB = require(\"node-tvdb/compat\");\nvar tvdb = new TVDB(\"ABC123\");\n\n// continue as normal...\n```\n\n## API\n\n### var client = new Client(API_KEY, [language])\n\nSet up tvdb client with API key and optional language (defaults to \"en\")\n\n``` javascript\nvar Client = require(\"node-tvdb\");\n\nvar tvdb           = new Client(\"ABC123\"); // lang defaults to \"en\"\nvar tvdbPortuguese = new Client(\"ABC123\", \"pt\");\n```\n\n### getTime\n\nGet the current server time\n\n``` javascript\ntvdb.getTime(function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getTime()\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getLanguages\n\nGet available languages useable by TheTVDB API\n\n``` javascript\ntvdb.getLanguages(function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getLanguages()\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getSeriesByName\n\nGet basic series information by name\n\n``` javascript\ntvdb.getSeriesByName(\"Breaking Bad\", function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getSeriesByName(\"Breaking Bad\")\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getSeriesById\n\nGet basic series information by id\n\n``` javascript\ntvdb.getSeriesById(73255, function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getSeriesById(73255)\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getSeriesByRemoteId\n\nGet basic series information by remote id (zap2it or imdb)\n\n``` javascript\ntvdb.getSeriesByRemoteId(\"tt0903747\", function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getSeriesByRemoteId(\"tt0903747\")\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n> Note: `node-tvdb` automatically selects between remote providers (IMDb and zap2it)\n\n### getSeriesAllById\n\nGet full/all series information by id\n\n``` javascript\ntvdb.getSeriesAllById(73255, function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getSeriesAllById(73255)\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getEpisodesById\n\nGet all episodes by series id\n\n``` javascript\ntvdb.getEpisodesById(153021, function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getEpisodesById(153021)\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getEpisodeById\n\nGet episode by episode id\n\n``` javascript\ntvdb.getEpisodeById(4768125, function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getEpisodeById(4768125)\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getEpisodeByAirDate\n\nGet series episode by air date\n\n``` javascript\ntvdb.getEpisodeByAirDate(153021, \"2011-10-03\", function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getEpisodeByAirDate(153021, \"2011-10-03\")\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getActors\n\nGet series actors by series id\n\n``` javascript\ntvdb.getActors(73255, function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getActors(73255)\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getBanners\n\nGet series banners by series id\n\n``` javascript\ntvdb.getBanners(73255, function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getBanners(73255)\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getUpdates\n\nGet series and episode updates since a given unix timestamp\n\n``` javascript\ntvdb.getUpdates(1400611370, function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getUpdates(1400611370)\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### getUpdateRecords\n\nAll updates within the given interval\n\n``` javascript\ntvdb.getUpdateRecords(\"day\", function(error, response) {\n    // handle error and response\n});\n```\n\nOR\n\n``` javascript\ntvdb.getUpdateRecords(\"day\")\n    .then(function(response) { /* handle response */ })\n    .catch(function(error) { /* handle error */ });\n```\n\n### utils.parsePipeList\n\nParse pipe list string to javascript array\n\n``` javascript\nvar list = \"|Mos Def|Faune A. Chambers|\"; // from a previous api call\nvar guestStars = Client.utils.parsePipeList(list);\n```\n\n## License\n\nThe MIT License (MIT)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/edwellbrook/node-tvdb/issues"
  },
  "_id": "node-tvdb@1.6.1",
  "_shasum": "3650034b19fd1b9abdabec4c63fa3bdc633f0c3b",
  "_from": "node-tvdb@1.6.1",
  "_resolved": "https://registry.npmjs.org/node-tvdb/-/node-tvdb-1.6.1.tgz"
}
