"use strict";

module.exports = Wait

var d3 = require('d3')
var key     = require('./key')

function Wait(viz) {
  if (!(this instanceof Wait)) {
    return new Wait(viz)
  }
  this.viz = viz
}

Wait.prototype.updateSel = function updateSel(sel, expanded, data){
  var self = this
  var wait = data.eventLoopAgg.filter(function(d){ return d.type != 'fn'})
  var update = sel.selectAll('.cxviz-eventloop-wait-item').data(wait, key)
  var path = d3.svg.line()
    .x(function(d){ return d.x})
    .y(function(d){ return d.y})
    .interpolate('linear')

  update.enter().append('path')
    .attr('class', 'cxviz-eventloop-wait-item')

  update.attr('d', function(d) { return path(pathCoords(d)) })
    .attr('fill', 'none')
    .attr('stroke', 'blue')
    .attr('stroke-width', '1px')


  update.exit().remove()


  function pathCoords(d){
    var coords = []
    var start = {
      x: d.cxvEL.layout.x,
      y: expanded ? d.cxvEL.layout.y - 2 : d.cxvEL.layout.height / 2
    }
    coords.push(start)

    var midLeft = {
      x: start.x,
      y: expanded ? start.y + (self.viz.coords.rowHeight / 2) : start.y + 7
    }
    coords.push(midLeft)

    var mid = {
      x: start.x + (d.cxvEL.layout.width / 2),
      y: midLeft.y
    }
    coords.push(mid)

    var midRight = {
      x: start.x + d.cxvEL.layout.width,
      y: mid.y
    }
    coords.push(midRight)

    var end = {
      x: midRight.x,
      y: expanded ? start.y + self.viz.coords.rowHeight + 3 : start.y
    }
    coords.push(end)

    return coords
  }
}
