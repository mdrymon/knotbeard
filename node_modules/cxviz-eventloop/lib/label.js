'use strict';

var d3  = require('d3')
var key = require('./key')

function Label (viz) {
  if (!(this instanceof Label)){
    return new Label(viz)
  }
  this.viz = viz
}

Label.prototype.updateSel = function updateSel(sel, data){
  var self = this
  var update = sel.selectAll('.cxviz-eventloop-label').data(data.eventLoopAgg, key)
  update.enter().append('text')
    .attr('class', 'cxviz-eventloop-label')
    .attr('clip-path', 'url(#cxviz-eventloop-labelclip)')
    .attr('id', function(d){ return 'cxviz-eventloop-label-text-' + key(d)})

  update.attr('x', 0)
    .attr('y', function(d){ return d.cxvEL.index * self.viz.coords.rowHeight})
    .attr('dx', 0)
    .attr('dy', (2 * self.viz.coords.rowHeight) / 3)
    .text(labelText)
  update.exit().remove()
}

Label.prototype.clearSel = function clearSel(sel){
  sel.selectAll('.cxviz-eventloop-label').remove()
}

Label.prototype.expandLabel = function expandLabel(d){
  var sel = this.viz.labelCont
  sel.select('#cxviz-eventloop-label-text-' + key(d))
    .attr('clip-path', null)
}

Label.prototype.clipLabel = function clipLabel(d){
  var sel = this.viz.labelCont
  sel.select('#cxviz-eventloop-label-text-' + key(d))
    .attr('clip-path', 'url(#cxviz-eventloop-labelclip)')
}

Label.prototype.clipAllLabels = function clipAllLabels(){
  var sel = this.viz.labelCont
  sel.selectAll('.cxviz-eventloop-label')
    .attr('clip-path', 'url(#cxviz-eventloop-labelclip)')
}
function labelText(d){
  var label = (d.type == 'fn') ? 'sync: ' : 'async: '
  return label += ((d.costSummary && d.costSummary.summaryText) || d.name)
}



module.exports = Label
