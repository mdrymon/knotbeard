'use strict';

var toTree  = require("./id_to_tree")

module.exports = function tree(w){
  if( w.segments && w.segments.length === 0){
    return
  }
  var id       = 0
  var t        = toTree(w.id)
  var depth    = 0
  var maxDepth = 0
  var segs     = w.fnSegs.slice(0)

  t.children.forEach(dft)

  w.maxDepth   = maxDepth
  w.tree       = t

  //finally, add ids to the wait segments
  w.waitSegs.forEach(function waitId(d){
    id++
    d.uid = id.toString(36)
  })

  function dft(tree){
    var s

    if( !tree.id ){
      return
    }

    s            = segs.shift()
    if( !s ){
      console.error('yikes, missing segment for tree ', tree, JSON.stringify(w), segs, id)
    }
    id++
    s.uid         = id.toString(36)   //our id mechanism assumes that segment ordering is relatively stable between traces
    s.depth      = depth
    tree.segment = s

    if( tree.children.length ){
      depth++
      maxDepth = depth > maxDepth ? depth : maxDepth
      tree.children.forEach(dft)
      depth--
    }
  }
}
