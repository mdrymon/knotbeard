"use strict";

module.exports = toTree

function toTree(id) {
  var trunk = new Branch("")
  id.split("~").forEach(function (idChunk) {
    walkTree(idChunk, trunk)
  })
  return trunk
}

function walkTree(id, root) {
  var nodeId = ""
  var lastAction = ""
  var newBranch
  var c
  var i
  var parent

  var nesting = [root]
  for (i = 0; i < id.length; i++) {
    c = id[i]
    parent = nesting[nesting.length - 1]
    if (c === "<") {
      if (nodeId.length) {
        newBranch = new Branch(nodeId)
        parent.children.push(newBranch)
        nesting.push(newBranch)
      }
      lastAction = "<"
      nodeId = ""
    }
    else if (c === ">") {
      if (lastAction === "<" && nodeId.length) {
        // leaf
        newBranch = new Branch(nodeId)
        parent.children.push(newBranch)
      }
      else {
        // not leaf, unwind
        nesting.pop()
      }
      lastAction = ">"
      nodeId = ""
    }
    else {
      nodeId += c
    }
  }
}

function Branch(id) {
  this.id = id
  this.children = []
}
