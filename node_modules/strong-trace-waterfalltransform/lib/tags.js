'use strict';

module.exports.enhanceTransactions = function enhanceTransactions(waterfall){
  var tags = waterfall.transactions && waterfall.transactions.transactions
  if( tags ){
    waterfall.waterfalls.forEach(function(w){
      var found = false
      if( w.tags ){
        w.tags.forEach(function(tag){
          if( !tags[tag] ){
            //TODO: this case can happen right now with 0.0.3 and with appended error codes (e.g. 200) for web transactions.
            //console.error('concurix-waterfalltransform error: missing transaction id', tag, ' recovering...')
            tags[tag] = {}
          }
          found = true
          tags[tag].waterfalls = tags[tag].waterfalls || []
          tags[tag].waterfalls.push(w)
        })
      }
      if( !found ){
        tags['untagged'] = tags['untagged'] || {}
        tags['untagged'].waterfalls = tags['untagged'].waterfalls || []
        tags['untagged'].waterfalls.push(w)
      }
    })
  }

  // Append summary info
  Object.keys(tags).forEach(function (tag) {
    var waterfalls = tags[tag].waterfalls
    if (waterfalls == null) {
      return
    }
    var jsMicros = 0
    var totalMicros = 0

    waterfalls.forEach(function (wf) {
      jsMicros += (wf.timing_stats.jsMicros * wf.instance_count)
      totalMicros += (wf.timing_stats.totalMicros * wf.instance_count)
    })

    if (waterfalls.summary_stats == null) {
      waterfalls.summary_stats = {}
    }
    waterfalls.summary_stats.jsMicros = jsMicros
    waterfalls.summary_stats.totalMicros = totalMicros
    waterfalls.summary_stats.percentBlocked = ((jsMicros / totalMicros)*100)
    waterfalls.summary_stats.percentAsync = ((1-(jsMicros/ totalMicros))*100)
    // TODO average jsMicros or avg totalMicros?
  })
}
